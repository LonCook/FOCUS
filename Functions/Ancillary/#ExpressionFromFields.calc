Let ( [
	ex = 
		"Let([ nameList = " & Quote( listOfFieldNames ) & "; " &
			"nameFull = GetValue( nameList; [n] ); " &
			"name = FieldNameShort( nameFull ); " &
			"valueRough = GetField( nameFull ); " &
			"value = " &
				"Case( " &
					"valueRough = \"?\" or IsEmpty( valueRough ); " &
						"Quote( \"\" ); " &
					"Left ( valueRough ; 12 ) = \"GetFieldName\"; " &
						"valueRough; " &
					//"Quote( valueRough ) " &
					"TextAsCalculation( valueRough ) " &
				") " &
			"]; " &
			"\"# ( \" & Quote( name ) & \" ; \" & value & \" )\" " &
		")" ;
	list = ListCustom ( 1 ; ValueCount ( listOfFieldNames ) ; ex )
	];
	Substitute ( list ; ")¶" ; ") &¶" )
)

/* —————————————————————————————— //
NAME:
	#ExpressionFromFields ( listOfFieldNames )

PURPOSE:
	Returns hash expression, each pair named after field with value containing field contents.
	Results can then be executed using the Evaluate() function.
	Useful for displaying calculation for inspection or demo purposes.

EXAMPLES:
	#ExpressionFromFields ( "CONTACT::NAME¶CONTACT::PHONE" )
	= #( "NAME" ; "Fred" ) & #( "PHONE" ; "971.555.1234" )

	#ExpressionFromFields ( "CONTACT::CALC_EXPRESSION" )
	= #( "CALC_EXPRESSION" ; GetAsTimestamp ( "1/1/2011" ) )

DEPENDENCIES:
	Custom Functions: #(), FieldNameShort()

HISTORY:
	Created: 2010-Nov-02 08h50 PST — Donovan A. Chandler
	Modified: 2011-Apr-11 12h24 PST — Donovan Chandler ; now passes calculations without escaping them
*/